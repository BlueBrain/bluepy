[base]
name = bluepy
testdeps =
    pytest

[tox]
envlist =
    check-version
    lint
    py{38,39,310,311}

minversion = 3.18
# ignore basepython for envs that already specify a version (py36, py37, py38...)
# but allow to enforce the python version for check-version, lint, coverage, docs
ignore_basepython_conflict = true

[testenv]
basepython = python3.11
setenv =
    PIP_INDEX_URL = https://bbpteam.epfl.ch/repository/devpi/simple
    MPLBACKEND = Agg
extras =
    all
deps =
    {[base]testdeps}
commands =
    pytest -v tests/unit {posargs}

[testenv:check-version]
skip_install = true
deps = bbp-nse-ci
commands = do_release.py -p . check-version

[testenv:check-packaging]
deps =
    wheel
    twine
commands =
    python setup.py sdist bdist_wheel -d {envtmpdir}/dist
    twine check {envtmpdir}/dist/*

[testenv:lint]
deps =
    pycodestyle
    pylint
commands =
    pycodestyle {[base]name}
    pylint {[base]name}

[testenv:coverage]
setenv = MPLBACKEND = Agg
deps =
    {[base]testdeps}
    coverage
commands =
    coverage run --source={[base]name} -m pytest -v tests/unit
    coverage report --show-missing
    coverage xml

[testenv:docs]
changedir = doc
deps =
    sphinx
    sphinx-bluebrain-theme
# set warnings as errors using the -W sphinx option
commands = make html SPHINXOPTS=-W
allowlist_externals = make

[pycodestyle]
# E731: do not assign a lambda expression, use a def
# W503: line break after binary operator
# W504: line break before binary operator
# E501: line too long (checked with pylint)
ignore = E731,W503,W504,E501

[testenv:functional]
deps =
    {[base]testdeps}
    bluepysnap>=2.0.2
    imageio[tifffile]
    jupyter
    nbclient
    nbformat
passenv =
    # Optional, log level to be used during tests
    TESTING_LOG_LEVEL
    # Optional, pattern to filter the notebooks
    TESTING_MATCH_FILES
setenv =
    JUPYTER_CONFIG_DIR = {envdir}/etc/jupyter
    JUPYTER_DATA_DIR = {envdir}/share/jupyter
    JUPYTER_RUNTIME_DIR = {envdir}/share/jupyter/runtime
    JUPYTER_PLATFORM_DIRS = 1
# Note: if you have jupyter extensions installed, one can set
#   HOME=/tmp/
# above to prevent them interfering
changedir =
    {toxinidir}/tests/functional
commands =
    jupyter labextension list
    jupyter --paths
    python -m pytest -v --durations=0 --log-cli-level=INFO . {posargs}

[testenv:update_notebooks]
# to be used only to update the notebooks when a functional test is added or modified
deps = {[testenv:functional]deps}
passenv = {[testenv:functional]passenv}
setenv =
    {[testenv:functional]setenv}
    TESTING_FORCE_UPDATE = 1
changedir = {[testenv:functional]changedir}
commands =
    python -m pytest -v --durations=0 --log-cli-level=INFO test_usecases.py {posargs}
